
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
    worker_connections  1024;
}


http {
    gzip on;
    gzip_min_length  500;
    gzip_proxied     any;
    gzip_comp_level 4;
    gzip_types  text/css text/javascript text/xml text/plain text/x-component application/javascript application/json application/xml application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_vary on;
    gzip_disable     "msie6";
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include /etc/nginx/conf.d/*.conf;
    server {
        server_name  kv.ax www.kv.ax;
        root         /var/www/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
        proxy_pass http://localhost:9000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
            }

            error_page 404 /404.html;
                location = /40x.html {
            }

            error_page 500 502 503 504 /50x.html;
                location = /50x.html {
            }
        
        listen [::]:443 ssl ipv6only=on; # managed by Certbot
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/kv.ax/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/kv.ax/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot




    }
    server {
        root /var/www/i;
        index index.html index.htm index.nginx-debian.html;
        server_name i.kv.ax www.i.kv.ax;
        
            location / {
                try_files $uri $uri/ =404;
                autoindex on;
            }

    
        listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/i.kv.ax/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/i.kv.ax/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    

}
    server {
        server_name c.kv.ax www.c.kv.ax;
        root /var/www/html;
        include /etc/nginx/default.d/*.conf;
        location / {
            proxy_pass http://localhost:9001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/c.kv.ax/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/c.kv.ax/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}
    server {
        server_name mail.kv.ax www.mail.kv.ax;
        root /var/www/mail;
        include /etc/nginx/default.d/*.conf;
        location / {
            proxy_pass http://localhost:9002;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/mail.kv.ax/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/mail.kv.ax/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }



    server {
    if ($host = www.kv.ax) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = kv.ax) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  kv.ax www.kv.ax;
    return 404; # managed by Certbot
    }

    server {
    if ($host = www.i.kv.ax) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = i.kv.ax) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        server_name i.kv.ax www.i.kv.ax;
    return 404; # managed by Certbot




}
    server {
    if ($host = www.c.kv.ax) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = c.kv.ax) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        server_name c.kv.ax www.c.kv.ax;
    listen 80;
    return 404; # managed by Certbot




}
    server {
    if ($host = mail.kv.ax) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        server_name mail.kv.ax www.mail.kv.ax;
    listen 80;
    return 404; # managed by Certbot


}}
